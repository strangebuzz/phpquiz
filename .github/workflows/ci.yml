# https://help.github.com/en/actions
name: PHPQuiz 🐘
on:
  push:
    branches:
    - master
jobs:
  cs:
    name: Coding Standards and checks ✨
    # https://github.com/shivammathur/setup-php#cloud-osplatform-support
    runs-on: ubuntu-18.04
    steps:
      # —— Setup Github actions 🐙 —————————————————————————————————————————————
      # https://github.com/actions/checkout
      - name: Checkout
        uses: actions/checkout@v2

      # https://github.com/shivammathur/setup-php 🐘
      - name: Setup PHP, extensions and composer with shivammathur/setup-php
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, dom, filter, gd, iconv, json, mbstring, pdo, pgsql

      # —— Composer 🧙‍️ —————————————————————————————————————————————————————————
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-interaction

      # —— Symfony 🎵 ——————————————————————————————————————————————————————————
      # We need the dev cache because the PHPStan Symfony plugin requires it.
      - name: Symfony cache warmup
        run: bin/console cache:warmup --env=dev

      - name: Install PHPUnit
        run: vendor/bin/simple-phpunit --version

      ## —— Coding standards ✨ ————————————————————————————————————————————————
      - name: Coding standards checks (php_codesniffer + PHPStan)
        run: make cs

  tests:
    name: Unit and functional test (PHP ${{ matrix.php-versions }}) ✅
    # https://github.com/shivammathur/setup-php#cloud-osplatform-support
    runs-on: ubuntu-18.04
    services:
      # https://docs.github.com/en/actions/configuring-and-managing-workflows/creating-postgresql-service-containers
      postgres:
        image: postgres:11-alpine # same as docker-compose.yaml
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: root
          POSTGRES_DB: phpquiz
        ports:
          - 5436:5432 # out/in
    strategy:
      fail-fast: true
      matrix:
        php-versions: ['7.4'] # , '8.0'

      # PHP 8 errors ———————————————————————————————————————————————————————————
      # doctrine/doctrine-migrations-bundle 3.0.1 requires php ^7.2 -> your php version (8.0.0) does not satisfy that requirement.
      # doctrine/migrations 3.0.1 requires php ^7.2 -> your php version (8.0.0) does not satisfy that requirement.
      # doctrine/orm 2.7.5 requires php ^7.1 -> your php version (8.0.0) does not satisfy that requirement.
      # ocramius/proxy-manager 2.10.0 requires php ~7.4.1 -> your php version (8.0.0) does not satisfy that requirement.
      # ekino/phpstan-banned-code v0.3.1 requires php ^7.1 -> your php version (8.0.0) does not satisfy that requirement.
      # friendsofphp/php-cs-fixer v2.16.7 requires php ^7.1 -> your php version (8.0.0) does not satisfy that requirement.

    steps:
      # —— Setup Github actions 🐙 —————————————————————————————————————————————
      # https://github.com/actions/checkout
      - name: Checkout
        uses: actions/checkout@v2

      # https://github.com/shivammathur/setup-php 🐘
      - name: Setup PHP, extensions and composer with shivammathur/setup-php
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, dom, filter, gd, iconv, json, mbstring, pdo, pgsql

      # —— Composer 🧙‍️ —————————————————————————————————————————————————————————
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-interaction

      ## —— Yarn 🐱 ————————————————————————————————————————————————————————————
      - name: Yarn install
        uses: borales/actions-yarn@v2.0.0
      - name: Yarn build
        uses: borales/actions-yarn@v2.0.0
        with:
          cmd: run encore production

      ## —— Tests ✅ ———————————————————————————————————————————————————————————
      - name: Load Doctrine fixtures
        run: make load-fixtures

      - name: Run functionnal and unit tests
        run: make test
